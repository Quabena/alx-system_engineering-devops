#!/usr/bin/env bash
# This script installs and configures HAProxy on a new Ubuntu machine as a load balancer.

echo -e "Updating and doing some minor checks...\n"

# Function to install packages if not already installed
function install() {
    command -v "$1" &> /dev/null

    if [ $? -ne 0 ]; then
        echo -e "Installing: $1\n"
        sudo apt-get update -y -qq && \
        sudo apt-get install -y "$1" -qq
        echo -e "\n"
    else
        echo -e "$1 is already installed.\n"
    fi
}

# Install HAProxy
install haproxy

echo -e "Backing up the default HAProxy configuration...\n"
sudo cp /etc/haproxy/haproxy.cfg /etc/haproxy/haproxy_default.backup

# Define the HAProxy configuration
server_config="
defaults
  mode http
  timeout client 15s
  timeout connect 10s
  timeout server 15s
  timeout http-request 10s

frontend web-with-joe-tech-frontend
    bind *:80
    default_backend web-with-joe-tech-backend

backend web-with-joe-tech-backend
    balance roundrobin
    server 483712-web-01 54.90.63.148:80 check
    server 483712-web-02 100.26.173.111:80 check
"

# Write the configuration to the HAProxy config file
echo "$server_config" | sudo tee /etc/haproxy/haproxy.cfg > /dev/null

# Enable HAProxy via the init script
echo "ENABLED=1" | sudo tee /etc/default/haproxy > /dev/null

echo -e "\nHAProxy has been configured to distribute traffic to:\n"
echo "  - web-01 (483712-web-01)"
echo "  - web-02 (483712-web-02)"

# Restart or start HAProxy service
if [ "$(pgrep -c haproxy)" -le 0 ]; then
    sudo service haproxy start
else
    sudo service haproxy restart
fi

echo -e "\nHAProxy setup completed with a roundrobin algorithm."
